<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Modules on</title><link>https://nvanjelo.github.io/documentation/code/modules/</link><description>Recent content in Modules on</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://nvanjelo.github.io/documentation/code/modules/index.xml" rel="self" type="application/rss+xml"/><item><title>group 1D histogram booking</title><link>https://nvanjelo.github.io/documentation/code/modules/group__analysis__h1book/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nvanjelo.github.io/documentation/code/modules/group__analysis__h1book/</guid><description>1D histogram booking # Updated on 2022-07-28 at 18:36:47 +0100</description></item><item><title>group 1D profile histogram booking</title><link>https://nvanjelo.github.io/documentation/code/modules/group__analysis__p1book/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nvanjelo.github.io/documentation/code/modules/group__analysis__p1book/</guid><description>1D profile histogram booking # Updated on 2022-07-28 at 18:36:47 +0100</description></item><item><title>group 2D histogram booking</title><link>https://nvanjelo.github.io/documentation/code/modules/group__analysis__h2book/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nvanjelo.github.io/documentation/code/modules/group__analysis__h2book/</guid><description>2D histogram booking # Updated on 2022-07-28 at 18:36:47 +0100</description></item><item><title>group 2D profile histogram booking</title><link>https://nvanjelo.github.io/documentation/code/modules/group__analysis__p2book/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nvanjelo.github.io/documentation/code/modules/group__analysis__p2book/</guid><description>2D profile histogram booking # Updated on 2022-07-28 at 18:36:47 +0100</description></item><item><title>group 2D scatter booking</title><link>https://nvanjelo.github.io/documentation/code/modules/group__analysis__s2book/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nvanjelo.github.io/documentation/code/modules/group__analysis__s2book/</guid><description>2D scatter booking # More&amp;hellip;
Detailed Description # Todo: REINSTATE
Updated on 2022-07-28 at 18:36:47 +0100</description></item><item><title>group 3D scatter booking</title><link>https://nvanjelo.github.io/documentation/code/modules/group__analysis__s3book/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nvanjelo.github.io/documentation/code/modules/group__analysis__s3book/</guid><description>3D scatter booking # Updated on 2022-07-28 at 18:36:47 +0100</description></item><item><title>group 4-vector comparison functions (for sorting)</title><link>https://nvanjelo.github.io/documentation/code/modules/group__momutils__cmp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nvanjelo.github.io/documentation/code/modules/group__momutils__cmp/</guid><description>4-vector comparison functions (for sorting) # Module: Functions for 4-momenta
Modules # Name MT calculation 4-vector string representations Types # Name typedef std::vector&amp;lt; FourVector &amp;gt; FourVectors typedef std::vector&amp;lt; FourMomentum &amp;gt; FourMomenta Functions # Name bool cmpMomByPt(const FourMomentum &amp;amp; a, const FourMomentum &amp;amp; b)
Comparison to give a sorting by decreasing pT. bool cmpMomByAscPt(const FourMomentum &amp;amp; a, const FourMomentum &amp;amp; b)
Comparison to give a sorting by increasing pT. bool cmpMomByP(const FourMomentum &amp;amp; a, const FourMomentum &amp;amp; b)</description></item><item><title>group 4-vector string representations</title><link>https://nvanjelo.github.io/documentation/code/modules/group__momutils__str/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nvanjelo.github.io/documentation/code/modules/group__momutils__str/</guid><description>4-vector string representations # Module: Functions for 4-momenta / 4-vector comparison functions (for sorting)
Functions # Name std::string toString(const FourVector &amp;amp; lv)
Render a 4-vector as a string. std::ostream &amp;amp; operator&amp;laquo;(std::ostream &amp;amp; out, const FourVector &amp;amp; lv)
Write a 4-vector to an ostream. Functions Documentation # function toString # inline std::string toString( const FourVector &amp;amp; lv ) Render a 4-vector as a string.
function operator&amp;laquo; # inline std::ostream &amp;amp; operator&amp;lt;&amp;lt;( std::ostream &amp;amp; out, const FourVector &amp;amp; lv ) Write a 4-vector to an ostream.</description></item><item><title>group ALICE specifics</title><link>https://nvanjelo.github.io/documentation/code/modules/group__alice/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nvanjelo.github.io/documentation/code/modules/group__alice/</guid><description>ALICE specifics # More&amp;hellip;
Namespaces # Name Rivet::ALICE Attributes # Name const Cut V0Aacceptance const Cut V0Cacceptance const Cut CL0acceptance const Cut CL1acceptance const Cut Eta1acceptance const Cut FASTORacceptance Detailed Description # This include projections to emulate trigger conditions, centrality, and selection of primary particles.
Attributes Documentation # variable V0Aacceptance # const Cut V0Aacceptance = (Cuts::etaIn(+2.8,+5.1)&amp;amp;&amp;amp;(Cuts::abscharge3 &amp;gt; 0)); The acceptance cut for the V0A
variable V0Cacceptance # const Cut V0Cacceptance = (Cuts::etaIn(-3.</description></item><item><title>group Analysis / beam compatibility testing</title><link>https://nvanjelo.github.io/documentation/code/modules/group__analysis__beamcompat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nvanjelo.github.io/documentation/code/modules/group__analysis__beamcompat/</guid><description>Analysis / beam compatibility testing # More&amp;hellip;
Functions # Name bool isCompatible(const ParticlePair &amp;amp; beams) const
Check if analysis is compatible with the provided beam particle IDs and energies. bool isCompatible(PdgId beam1, PdgId beam2, double e1, double e2) const
Check if analysis is compatible with the provided beam particle IDs and energies. bool isCompatible(const PdgIdPair &amp;amp; beams, const std::pair&amp;lt; double, double &amp;gt; &amp;amp; energies) const
Check if analysis is compatible with the provided beam particle IDs and energies.</description></item></channel></rss>